@implements IDisposable
@inject NavigationManager NavigationManager
@inject IAuthService AuthService 
@inject IDataService DataService
@inject IDataService DataService

<div class="ps-4 pb-1 pe-0 pt-0 navbar navbar-dark" style="background-color: rgba(0,0,0,0.3)">
    <a class="navbar-brand text-start" href="">
        <div class="logo-title">
            @if (!string.IsNullOrWhiteSpace(_organization?.OrganizationName))
            {
                @_organization.OrganizationName
            }
            else
            {
                <span>Remotely</span>
            }
        </div>
        <div class="logo-subtitle">Support Portal</div>
    </a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">

        <li class="nav-item px-3">
            <NavLink class="nav-link nav-link-modern" href="" Match="NavLinkMatch.All">
                <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" />
                </svg>
                <span>Home</span>
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link nav-link-modern" href="downloads">
                <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z" />
                </svg>
                <span>Downloads</span>
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link nav-link-modern" href="/Viewer" target="_blank">
                <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M21,16V4H3V16H21M21,2A2,2 0 0,1 23,4V16A2,2 0 0,1 21,18H14L16,21V22H8V21L10,18H3C1.89,18 1,17.1 1,16V4C1,2.89 1.89,2 3,2H21Z" />
                </svg>
                <span>Remote Control</span>
            </NavLink>
        </li>

        <AuthorizeView>
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link nav-link-modern" href="deploy">
                        <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M9,10H7V12H9V10M13,10H11V12H13V10M17,10H15V12H17V10M19,3H18V1H16V3H8V1H6V3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3M19,19H5V8H19V19Z" />
                        </svg>
                        <span>Deploy</span>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link nav-link-modern" href="scripts">
                        <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M14.6,16.6L19.2,12L14.6,7.4L16,6L22,12L16,18L14.6,16.6M9.4,16.6L4.8,12L9.4,7.4L8,6L2,12L8,18L9.4,16.6Z" />
                        </svg>
                        <span>Scripts</span>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link nav-link-modern" href="device-details">
                        <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" />
                        </svg>
                        <span>Device Details</span>
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link nav-link-modern" href="user-options">
                        <svg class="nav-icon-modern" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.22,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.22,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.68 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z" />
                        </svg>
                        <span>User Options</span>
                    </NavLink>
                </li>

            </Authorized>
        </AuthorizeView>


        @if (_user?.IsAdministrator == true)
        {
            <div class="nav-divider">
                <span class="nav-section-title">Admin</span>
            </div>

            <NavLink class="nav-item" href="manage-organization">
                <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12,7V3H2V21H22V7H12M6,19H4V17H6V19M6,15H4V13H6V15M6,11H4V9H6V11M6,7H4V5H6V7M10,19H8V17H10V19M10,15H8V13H10V15M10,11H8V9H10V11M10,7H8V5H10V7M20,19H12V17H20V19M20,15H12V13H20V15M20,11H12V9H20V11Z" />
                </svg>
                <span class="nav-text">Organization</span>
                <div class="nav-indicator"></div>
            </NavLink>
            <NavLink class="nav-item" href="branding">
                <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M20.71,4.04C21.1,3.65 21.1,3 20.71,2.63L18.37,0.29C18,-0.1 17.35,-0.1 16.96,0.29L15.12,2.12L18.87,5.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z" />
                </svg>
                <span class="nav-text">Branding</span>
                <div class="nav-indicator"></div>
            </NavLink>
            <NavLink class="nav-item" href="api-keys">
                <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M22,18V22H18V19H15V16H12L9.74,13.74C9.19,13.91 8.61,14 8,14A6,6 0 0,1 2,8A6,6 0 0,1 8,2A6,6 0 0,1 14,8C14,8.61 13.91,9.19 13.74,9.74L22,18M7,5A2,2 0 0,0 5,7A2,2 0 0,0 7,9A2,2 0 0,0 9,7A2,2 0 0,0 7,5Z" />
                </svg>
                <span class="nav-text">API Keys</span>
                <div class="nav-indicator"></div>
            </NavLink>

            @if (_user?.IsServerAdmin == true)
            {
                <NavLink class="nav-item" href="server-logs">
                    <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z" />
                    </svg>
                    <span class="nav-text">Server Logs</span>
                    <div class="nav-indicator"></div>
                </NavLink>
                <NavLink class="nav-item" href="server-config">
                    <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M22.7,19L13.6,9.9C14.5,7.6 14,4.9 12.1,3C10.1,1 7.1,0.6 4.7,1.7L9,6L6,9L1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1C4.8,14 7.5,14.5 9.8,13.6L18.9,22.7C19.3,23.1 19.9,23.1 20.3,22.7L22.6,20.4C23.1,20 23.1,19.3 22.7,19Z" />
                    </svg>
                    <span class="nav-text">Server Config</span>
                    <div class="nav-indicator"></div>
                </NavLink>
            }
        }

        <div class="nav-user-section">
            <AuthorizeView>
                <Authorized>
                    <a class="nav-user-item" href="Account/Manage">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" />
                        </svg>
                        <span class="nav-text">Account</span>
                    </a>
                    <form action="Account/Logout" method="post" class="nav-logout">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@_currentUrl" />
                        <button type="submit" class="nav-user-item logout-btn">
                            <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M16,17V14H9V10H16V7L21,12L16,17M14,2A2,2 0 0,1 16,4V6H14V4H5V20H14V18H16V20A2,2 0 0,1 14,22H5A2,2 0 0,1 3,20V4A2,2 0 0,1 5,2H14Z" />
                            </svg>
                            <span class="nav-text">Logout</span>
                        </button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <a class="nav-user-item" href="Account/Login">
                        <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M10,17V14H3V10H10V7L15,12L10,17M10,2H19A2,2 0 0,1 21,4V20A2,2 0 0,1 19,22H10A2,2 0 0,1 8,20V18H10V20H19V4H10V6H8V4A2,2 0 0,1 10,2Z" />
                        </svg>
                        <span class="nav-text">Log in</span>
                    </a>
                    @if (_isRegistrationEnabled)
                    {
                        <a class="nav-user-item" href="Account/Register">
                            <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M15,14C12.33,14 7,15.33 7,18V20H23V18C23,15.33 17.67,14 15,14M6,10V7H4V10H1V12H4V15H6V12H9V10M15,12A4,4 0 0,0 19,8A4,4 0 0,0 15,4A4,4 0 0,0 11,8A4,4 0 0,0 15,12Z" />
                            </svg>
                            <span class="nav-text">Register</span>
                        </a>
                    }
                </NotAuthorized>
            </AuthorizeView>

            <a class="nav-user-item" href="/about">
                <svg class="nav-icon" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M11,17H13V11H11V17Z" />
                </svg>
                <span class="nav-text">About</span>
            </a>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool _isRegistrationEnabled;
    private RemotelyUser? _user;
    private Organization? _organization;
    private string? _currentUrl;

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    protected override async Task OnInitializedAsync()
    {
        var settings = await DataService.GetSettings();
        _isRegistrationEnabled = settings.MaxOrganizationCount < 0 || DataService.GetOrganizationCount() < settings.MaxOrganizationCount;

        await base.OnInitializedAsync();

        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        var userResult = await AuthService.GetUser();

        if (!userResult.IsSuccess)
        {
            return;
        }

        _user = userResult.Value;

        if (!string.IsNullOrWhiteSpace(_user?.OrganizationID))
        {
            var orgResult = await DataService.GetOrganizationById(_user.OrganizationID);
            if (orgResult.IsSuccess)
            {
                _organization = orgResult.Value;
            }
        }
        else
        {
            var orgResult = await DataService.GetDefaultOrganization();
            if (orgResult.IsSuccess)
            {
                _organization = orgResult.Value;
            }
        }
    }

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : "";


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        InvokeAsync(StateHasChanged);
    }
}
